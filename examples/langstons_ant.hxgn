// Author: emm312
// Description: Program that does 12000 iterations of Langton's ant simulation

import io.graphics;

int8 main() {
    int32 x = 50;
    int32 y = 50;
    int32 direction = 0;
    int32 length = 12000;
    int32 idx = 0;
    while (idx < length) {
        int32 colour = 0;
        getpixel(x, y); // Since returning is not supported, we use a urcl codeblock to load it into a variable.
        urcl "POP R0";
        urcl "PSH R2";
        urcl
        if (colour == 1) {
            setpixel(x, y, 0);
            direction = (direction + 1) % 4;
        }
        if (colour == 0) {
            setpixel(x, y, 1);
            direction = (direction - 1) % 4;
        }


        if (direction == 0) {
        x = x - 1;
        } if (direction == 1) {
            y = y + 1;
        } if (direction == 2) {
            x = x + 1;
        } if (direction == 3) {
            y = y - 1;
        }
        idx = idx + 1;
    }
}


